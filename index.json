[{"content":"Detailed Curriculum to Learn Assembly Language (x86) This curriculum is designed to guide a complete beginner through the process of learning x86 assembly language. It covers essential concepts, tools, and practical skills required to write and understand assembly code.\nPart 1: Foundations of Computer Architecture Week 1: Introduction to Computer Architecture and Binary Basic Computer Architecture\nOverview of CPU, memory, and I/O devices. How a computer executes programs. Number Systems\nUnderstanding binary, decimal, and hexadecimal systems. Conversion between different number systems. Basic arithmetic operations in binary. Data Representation\nHow data is represented in memory (bits, bytes, words). Representation of integers (signed, unsigned). Floating-point representation (IEEE 754 basics). Resources:\n\u0026ldquo;Computer Organization and Design\u0026rdquo; by David Patterson and John Hennessy. Khan Academy\u0026rsquo;s Computing Systems Course. Online tutorials for binary and hexadecimal conversions. Activities:\nConvert numbers between binary, decimal, and hexadecimal. Represent basic arithmetic operations in binary. Week 2: Introduction to Assembly Language What is Assembly Language?\nHigh-level vs. low-level languages. Role of assembly language in programming. Introduction to the x86 architecture. Basic Components of Assembly Language\nInstructions, operands, and addressing modes. Introduction to registers and their functions. Assembly Language Syntax\nStructure of an assembly program. Assembly directives and comments. Resources:\n\u0026ldquo;Assembly Language Step-by-Step\u0026rdquo; by Jeff Duntemann. Online resources for x86 architecture overview (Intel’s official documentation). Activities:\nWrite a simple assembly program that moves data between registers. Learn to compile and run the program using an assembler like NASM. Part 2: Writing and Understanding x86 Assembly Programs Week 3: Setting Up the Development Environment Installing Tools\nSetting up NASM (Netwide Assembler) or another assembler. Introduction to debugger tools (GDB, OllyDbg). Setting up an editor or IDE for assembly (VS Code with appropriate extensions). Hello World Program in Assembly\nWriting a simple “Hello, World!” program. Assembling, linking, and executing the program. Understanding the program structure. Resources:\nNASM official documentation and installation guides. Tutorials on using GDB for debugging assembly code. Activities:\nWrite and run a “Hello, World!” program. Experiment with basic debugging using GDB. Week 4: Basic Instructions and Data Movement Data Movement Instructions\nUnderstanding mov, push, and pop instructions. Register-to-register, register-to-memory, and memory-to-register data transfers. Arithmetic and Logic Instructions\nBasic arithmetic operations: add, sub, inc, dec. Logical operations: and, or, xor, not. Using the Stack\nUnderstanding the stack structure. Stack operations and their importance in function calls. Resources:\nOnline x86 assembly tutorials. Intel x86 instruction set reference. Activities:\nWrite assembly programs that perform basic arithmetic operations. Experiment with stack operations and understand their effect on program execution. Part 3: Advanced x86 Assembly Concepts Week 5: Control Flow Instructions Branching Instructions\nConditional and unconditional jumps (jmp, je, jne, jg, etc.). Comparison instructions (cmp, test). Looping Constructs\nImplementing loops using jump instructions. Writing simple loop constructs in assembly. Subroutines and Procedures\nCalling and returning from procedures. Using call and ret instructions. Passing arguments to procedures using registers and stack. Resources:\nTutorials on control flow in x86 assembly. Example programs demonstrating branching and looping. Activities:\nWrite programs that implement various control flow mechanisms. Create and call simple procedures. Week 6: Working with Memory Memory Addressing Modes\nImmediate, direct, indirect, and indexed addressing modes. Understanding effective addresses and how to use them in instructions. Accessing Data in Memory\nLoading and storing data to/from memory. Working with arrays and structures. String Operations\nInstructions for string manipulation (movs, stos, scas, lods). Resources:\nDetailed tutorials on x86 addressing modes. Examples of memory manipulation in assembly programs. Activities:\nWrite programs that use different addressing modes. Manipulate arrays and strings in assembly. Part 4: Interfacing with the Operating System Week 7: System Calls and Interacting with OS Introduction to System Calls\nWhat are system calls and how are they used in assembly? System call conventions in Linux (int 0x80) and Windows (WinAPI). Performing Basic I/O\nReading from and writing to the console. Using system calls for file operations. Interrupts and Exceptions\nBasics of interrupts. Handling exceptions in assembly. Resources:\nOS-specific documentation on system calls. Examples of system calls in Linux and Windows assembly programs. Activities:\nWrite programs that use system calls to perform I/O operations. Experiment with interrupt handling. Week 8: Advanced Topics and Optimization Advanced Instructions\nIntroduction to SSE (Streaming SIMD Extensions) and other advanced instructions. Using floating-point operations. Optimizing Assembly Code\nTechniques for optimizing assembly code. Understanding and minimizing the cost of instructions. Inline Assembly\nWriting inline assembly within high-level languages (e.g., C). Mixing assembly and high-level code for performance-critical tasks. Resources:\nDocumentation on SSE and advanced x86 instructions. Guides on code optimization techniques. Activities:\nOptimize a given assembly code for performance. Write inline assembly in a C program to speed up a critical section. Part 5: Capstone Project and Further Exploration Week 9-10: Capstone Project Project Planning\nDefine a project that incorporates various aspects of assembly programming. Examples: a simple game, a utility program, or an algorithm implementation. Implementation\nApply all learned concepts to build the project. Debug and optimize the project. Documentation and Presentation\nDocument the project thoroughly. Prepare a presentation or report explaining the design and implementation. Activities:\nPlan and implement a capstone project. Present the project and explain the code and concepts used. Week 11: Exploring Advanced Topics Low-Level Programming and Security\nIntroduction to low-level security concepts (buffer overflow, code injection). Writing secure assembly code. Reverse Engineering\nBasics of reverse engineering. Using tools like disassemblers and debuggers to understand compiled code. Interfacing with Hardware\nWriting assembly code to interface with hardware components. Examples: controlling peripherals or reading from sensors. Resources:\nOnline resources and books on reverse engineering and low-level security. Tutorials on hardware interfacing in assembly. Activities:\nAnalyze a small compiled binary to understand its function. Write a simple assembly program that interacts with hardware. Part 6: Continuous Learning and Practice Week 12: Continuing Education and Practice Resources for Further Learning\nAdvanced books and courses on assembly language. Online communities and forums for assembly programmers. Practical Exercises\nRegularly solve problems on platforms like Project Euler or similar using assembly. Participate in coding challenges or competitions that include assembly programming. Contributing to Open Source\nFind open-source projects that use assembly and contribute. Review and analyze code written by others. Resources:\nAdvanced texts on x86 assembly and computer architecture. Online coding challenge platforms. Activities:\nEngage in continuous practice and participate in the community. Keep building projects and refining assembly programming skills. Additional Tips for Success Patience and Practice: Assembly language can be challenging, but regular practice and patience are key to mastering it. Community Engagement: Join online forums, participate in discussions, and seek help from the community. Real-World Applications: Apply your skills in real-world scenarios to deepen your understanding. By following this structured curriculum, you will gain a solid foundation in x86 assembly language and develop the skills necessary to tackle complex low-level programming tasks.\n","permalink":"/posts/assembly-x86-curriculum/","summary":"Detailed Curriculum to Learn Assembly Language (x86) This curriculum is designed to guide a complete beginner through the process of learning x86 assembly language. It covers essential concepts, tools, and practical skills required to write and understand assembly code.\nPart 1: Foundations of Computer Architecture Week 1: Introduction to Computer Architecture and Binary Basic Computer Architecture\nOverview of CPU, memory, and I/O devices. How a computer executes programs. Number Systems","title":"Assembly x86 Curriculum"},{"content":"I list my favorite websites here, I want to share this list so maybe the others find this list userful. I didn\u0026rsquo;t put them on specific category since the list is still small, I might do that in the future.\nUnderstanding base64 in C# Applied Mathematics for Programming - MIT How to write a good paragraph Searching code with grep by MDN Common UNIX utilities How to put information together - GCFGlobal Assembly x86 tutorial by Loyola Marymount University Roby\u0026rsquo;s PC Assembly (x86) Tutorial Japanese Vocabularies - Kanshudo Linux System Programming Introduction - Coursera 50 Dynamic Programming Problems Regular Expression Matching Discrete Mathematics by everythingcomputerscience.com Programming Notes for Professionals books PostgreSQL Documentation Essential Programming Books Ebook Foundation Free Programming Books Electric Circuit Textbook Open Group Base Specification The Crowd a Study of The Popular Mind The Principles of Psychology VOL I The Principles of Psychology VOL II The Interpretation of Dreams ","permalink":"/posts/bookmark-home/","summary":"I list my favorite websites here, I want to share this list so maybe the others find this list userful. I didn\u0026rsquo;t put them on specific category since the list is still small, I might do that in the future.\nUnderstanding base64 in C# Applied Mathematics for Programming - MIT How to write a good paragraph Searching code with grep by MDN Common UNIX utilities How to put information together - GCFGlobal Assembly x86 tutorial by Loyola Marymount University Roby\u0026rsquo;s PC Assembly (x86) Tutorial Japanese Vocabularies - Kanshudo Linux System Programming Introduction - Coursera 50 Dynamic Programming Problems Regular Expression Matching Discrete Mathematics by everythingcomputerscience.","title":"Bookmarks Homepage"},{"content":"If you are learning programming or computer science related stuff, chances are you will write some code. Coding and programming are two different things, in a nutshell, programming is applying some logic while coding is actually typing the applied logic into machine-readable instruction, read this awesome article from freeCodeCamp.\nYou can do programming wherever you are, you don\u0026rsquo;t have to sit in front of your computer since applying some logic don\u0026rsquo;t necessarily need a computer.Think about how you study math, that\u0026rsquo;s how you study programming, more or less.\nStudying coding, on the other hand, requires you to be in front of your computer and type some code. Now, no matter how much you love programming and coding, you still have to leave your computer, you got other things to do and booting up your computer just to be able to study code might feel a bit of a hassle.\nLearning programming is important but if you can\u0026rsquo;t implement what you have learnt, it is practically useless, in other word, you just waste your time. That\u0026rsquo;s why you also need to learn how to code, learn how to make you logic become reality and solve real world problems.\nBooting up a computer just to typing some confusing text and make your brain hurt doesn\u0026rsquo;t sound very fun, that\u0026rsquo;s being said, in this article I want to share with you, how you can learn coding while making it fun, or at least making coding less of a hassle.\nMeaningless Things and Why It\u0026rsquo;s Actually Good What I mean with meaningless here is things that are not exciting to do, it could be anything from doing daily habits to working on the same problem multiple times.\nFor example, when you are hungry, you search for something to eat, maybe you go to the kitchen and start making something or just order it using online service, in the end you have something to eat and start devouring it to satisfy your hunger.\nSearching for food when we are hungry is an activity we do in daily basis, we do it so often that sometimes we didn\u0026rsquo;t think about it too much, hungry means search for food to eat, done, there is no excitement in doing such activity since we do it everyday—unless if we are visiting a restaurant then it\u0026rsquo;s a different story.\nWhen we do such activity without all of this emotional attributes, we actually using less energy satisfy our need, since we just focus on doing the activity, our body will use the energy to complete such task and not using it to other things like the feeling of excitement.\nIn other word, meaningless things are just things we do automatically we didn\u0026rsquo;t give it much attention since we didn\u0026rsquo;t really have to. Because, as you can tell, giving attention to something is using a lot of energy.\nThe More Often You Do Something, The Less Exciting It Becomes Back when I was in highschool, \u0026lt;i do pullups on my way to go home at the school\u0026rsquo;s pullup bar\u0026gt;\nExcitement is Burden for Your Brain Starting Small Keep Things Inline Afterword ","permalink":"/posts/start-coding-small/","summary":"If you are learning programming or computer science related stuff, chances are you will write some code. Coding and programming are two different things, in a nutshell, programming is applying some logic while coding is actually typing the applied logic into machine-readable instruction, read this awesome article from freeCodeCamp.\nYou can do programming wherever you are, you don\u0026rsquo;t have to sit in front of your computer since applying some logic don\u0026rsquo;t necessarily need a computer.","title":"Keep Writing Code Until it Becomes Meaningless"},{"content":"Learning is a tiresome activity, you need to put a lot of effort and time when learning something, this is even true when learning something by yourself, like programming, since nobody is going to remind you when to study, when to review your note, when to exercise, what to study after you finished the current topic, in other word, you need to put extra effort because nobody is going to guide you whatsoever. Which is why keeping record of your learning journey is very important so you can know how far have you progressed, how far are you from your goals, what need to be evaluated from your previous experience and so forth.\nOne of the easiest way to keeping record of your learning journey is by taking a note. Now, there are a lot of ways to take a note nowadays, from using the notebook and pen to using computer or smartphone. However, when taking a note while learning programming I would highly recommend using digital based note taking method, or in this case, a computer, why? Because when you learn programming, most of the time you will be on your computer typing some code, that\u0026rsquo;s why using computer for taking a note will make it easier since you don\u0026rsquo;t have to switch around and write on a notebook, you can just switch to your note taking application as you learn.\nThere are a lot of note taking applications for computer, however here I want to show you how you can use web development as your note taking platform, and why you should use it especially is you are learning programming.\nRapid Change of Information Programming, just like other fields of technology, is evolving in a rapid speed. A tutorial on how to use certain framework in programming from 2 years ago might no be relevant by now since the framework has gone through some major update (this is my personal experience by the way). Everyday the developers keep adding new features and fixing bugs to make the software better, sometimes it takes several months to finish, sometimes it takes only several days to finish, in short, it changes really fast. Not to mention when a particular software got an update, it might affects other softwares, for instance, if the browser got an update, your javascript knowledge might need to be updated as well. If you were to write all this information on a notebook, it will get confusing real quick since your information on that notebook will most likely outdated, and there is now way to update the information unless writing on a new page, which is a waste. Moreover, if you need to include a link to certain website or documentation, it is difficult to do in notebook, you can\u0026rsquo;t just click it and open it on your browser. And there is picture and diagram, all of which cannot be stored easily on a notebook.\nWith that being said, the most logical thing to do to take a note while learning programming is to use digital platform, there are a lot of note taking programs for computer, but here I will use web development as a tool to take a note while learning programming. You maybe ask, why use web development instead of just use an existing program? Well, you can actually, but why just learn one thing if you can learn two at the same time? Of course this is just my opinion and you can completely ignore this article and throw it on a trash bin, however what I want to emphasize here is that how putting extra effort on learning something is actually a shortcut, or should I say \u0026ldquo;The easiest way to learn something is to learn it the hard way\u0026rdquo;, that is to put more effort on it, to put the work on it. Because the more difficult something to get, the more precious it is in our heart.\nBut I don\u0026rsquo;t learn web development!\nThat\u0026rsquo;s compeletely fine, you don\u0026rsquo;t have to build a full-blown web app for your note taking platform, just basic knowledge of html and css is enough since what you will do is just storing your note on the web. And when I mean on the web, I mean online, that is you can access the note from any device that browse the internet.\nWait, there are already exist such services!\nI know, and you can use that service, however when you build your own, you can learn how the internet works and the basic of web technology, it doesn\u0026rsquo;t matter what your expertise is, you will use the web every now and then, so yeah, it won\u0026rsquo;t hurt learning a little bit of web development.\nEnough with the reasoning, let\u0026rsquo;s see how we can use web development as our note taking platform while learning programming.\nNote Taking using Web Development I know I said that I will show you how we can use web development as your note taking platform, however I won\u0026rsquo;t be specific since note taking is different from person to person. What you need to build is just a simple web platform where you can store your notes, it doesn\u0026rsquo;t matter how you want it to look like or what it capable of, the most important one is that it can store notes easily and you can retrieve your note easily. There are a lot of free services to host such application. Here are just some that I know, you can use other services if you want.\n1. Wordpress Everybody knows Wordpress, if you\u0026rsquo;ve been on the internet for quite sometime chances are you already encountered a website powered by wordpress. Wordpress is a content management system or CMS for short, to put simply it makes managing your content easier since you don\u0026rsquo;t have to worry about the technical detail and only focus on your business instead. It has a free tier where you can create a website a basically make your own blog. Because of its easy to use nature, even non-tech savy people have been using wordpress for their online needs, it becomes one the most popular CMS out there. Because of its easy to use and popularity, I would recommend you to use wordpress as your note taking platform while learning programming, it is free and you almost don\u0026rsquo;t need any web development skill to use it. You still can learn about web development from using wordpress like url, domain name, and other basic things about the internet. The reason I recommend wordpress first is because you can actually start taking note and put it online on the internet for you and the world to see, there are a lot templates to choose from, the website has been styled for you, so you don\u0026rsquo;t have to fight error messages while taking a note.\n2. GitHub Pages GitHub offers a free hosting for static website called GitHub Pages. You can learn more on its official documentation. The difference between GitHub page and wordpress is that in GitHub page you really start from scratch, there is no template whatsoever. It is a good platform if you really want to learn the basic of web development like HTML and CSS while taking a note. While you can style it however you want, it all depends on your own effort since you really start building the website from scratch.\n3. Vercel Vercel is a bit specific because you have to use javascript to be able to use vercel. Javascript knowledge is required for using Vercel\u0026rsquo;s service, however if you want to use it as a note takning platform which only need a basic function such as storing and displaying text and images, you don\u0026rsquo;t need that much of javascript, a very basic knowledge of the language is enough to be able to use Vercel as your note taking platform. If you have a really creative ideas on your mind, Vercel is the perfect choice since it supports basically every major javascript framework, whatever you want to build using javascript, you can put it online on Vercel.\nDon\u0026rsquo;t Over Engineer your Note Taking Platform Being creative and all is good when using web development as your note taking platform, but don\u0026rsquo;t get carried away and focus only on designing and developing it, unless if you want to delve into web development then it is a different story, if you want to use it just as your note taking platform however, it doesn\u0026rsquo;t have to be good or eye-candy, it just have to be readable and easy for you to use. The idea of using web development as your note taking platform is that to make writing and accessing your note easier, since while learning programming you will most likely be in front of your monitor typing some code, it just makes more sense to choose what\u0026rsquo;s easier for you to use at that moment, plus you can learn the basic of the internet, things that you will encounter no matter what field of programming you focus on.\nUse the Already Existing Services Using web development as a note taking platform is not for everyone, if you don\u0026rsquo;t feel like learning a whole new field of programming just to store your note, that\u0026rsquo;s completely fine, as a matter of fact, if developing a whole new project just to store your note feels like a burden, don\u0026rsquo;t do it, since there are already a lot of existing services that offer similar things. Below I list just a few of them but you can certainly use other service if you want.\n1. Obsidian Obsidian is one of the most popular note taking app out there, it available on the web, pc, and mobile. It has a lot of features, it uses markdown syntax and stores the file in a markdown file, making transferring your notes across devices a lot easier. If you don\u0026rsquo;t know what features you would expect from a note taking app, use Obsidian, it won\u0026rsquo;t dissapoint you.\n2. Google Keep I haven\u0026rsquo;t use Google Keep at all, to be honest I don\u0026rsquo;t even know google has a note taking app. Anyways, there is it there for you to use.\n3. GitHub This one is the GitHub itself and the GitHub Pages I mentioned above. If you have a README.md file on your repository, GitHub will render it automatically when you visit the directory of that README.md file. Of course you can just use any file format and store it on GitHub, what makes it different is that you can easily change between \u0026ldquo;versions\u0026rdquo; of your note just like when you developing an actual software.\nAfterword I hope you learn something new after reading this post, even just a little, giving positive impact through my writing is something I always dream of especially in the field of programming and mathematics. All I said in this article is purely just my opinion, if you have other opinion on how to store a note when learning programming, let me know, I love sharing thoughts and ideas about anything related to programming and mathematics.\nThat\u0026rsquo;s all from me, I hope we meet again on another post.\nStay safe.\n","permalink":"/posts/documenting-programming-journey-with-web-development/","summary":"Learning is a tiresome activity, you need to put a lot of effort and time when learning something, this is even true when learning something by yourself, like programming, since nobody is going to remind you when to study, when to review your note, when to exercise, what to study after you finished the current topic, in other word, you need to put extra effort because nobody is going to guide you whatsoever.","title":"Documenting Programming Journey with Web Development"}]